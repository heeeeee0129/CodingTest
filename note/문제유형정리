# 코딩테스트 문제 유형 정리

## 1. 해시테이블

[해시테이블](https://school.programmers.co.kr/learn/courses/30/lessons/92341)

## 2. 스택,큐

- 스택: DFS, 큐: BFS
- 선입선출, 후입선출에 적용

[스택,큐](https://school.programmers.co.kr/learn/courses/30/lessons/42583)

## 3. 힙

- 우선순위를 고려하는 문제 (큰 수부터, 작은수부터)
- Java : PriorityQueue로 구현

[힙](https://school.programmers.co.kr/learn/courses/30/lessons/42626)

## 4. 구현

[구현](https://school.programmers.co.kr/learn/courses/30/lessons/60061)

## 5. 브루트포스(완전탐색)

- DFS, BFS, 완전탐색
- 모든 경우를 탐색해야 하는 경우

[브루트포스(완전탐색)](https://school.programmers.co.kr/learn/courses/30/lessons/92342)

## 6. 다이나믹 프로그래밍(DP)

[다이나믹 프로그래밍(DP)](https://school.programmers.co.kr/learn/courses/30/lessons/43105)

## 7. 그리디

- 부분적인 최적해가 전체적인 최적해
- 정렬, 우선순위 큐를 활용하는 경우가 많음

[그리디](https://school.programmers.co.kr/learn/courses/30/lessons/42883)

## 8. 이분탐색

[이분탐색](https://school.programmers.co.kr/learn/courses/30/lessons/64062)

## 9. 트리

- DFS를 활용한 전/중/후위 순회, 루트노드, 서브트리, 높이, 너비, 그래프에서 트리의 수 찾기 등 다양하게 출제 가능

[트리](https://www.acmicpc.net/workbook/view/9657)

## 10. 그래프

- 최단 경로 : 다익스트라, 벨만포드, BFS, 플로이드-워셜
- 그래프 순회 : BFS, DFS
- 위상정렬

[그래프](https://school.programmers.co.kr/learn/courses/30/lessons/72413)

## 11. 투포인터, 슬라이딩 윈도우

[2230번: 수 고르기](https://www.acmicpc.net/problem/2230)

## 12. 유니온 파인드

- 노드를 집합에 속하게 하는 Union 연산과 노드의 루트 노드를 찾는 Find 연산으로 이루어진다.

[1717번: 집합의 표현](https://www.acmicpc.net/problem/1717)

## 13. 최소신장트리

- 크루스칼, 프림 알고리즘

[1368번: 물대기](https://www.acmicpc.net/problem/1368)

## 14. 비트연산

- AND, OR, XOR, NOT, Shift

[11723번: 집합](https://www.acmicpc.net/problem/11723)
